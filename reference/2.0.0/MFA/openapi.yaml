openapi: 3.0.0
info:
  title: CIAM MFA API
  version: 1.0.0
  description: >-
    This API Specification is designed to provide technical guidance required to
    consume and integrate with our APIs for multi factor authentication.
  x-logo:
    url: ''
servers:
  - url: https://ciam-mfa-api-dev.1dc.com/ciam-mfa/v1
  - url: https://ciam-mfa-api-dev.1dc.com/ciam-mfa/v2
paths:
  /users/{username}/mfadevices:
    get:
      operationId: getDeviceDetails
      summary: Get All  User Devices registered for MFA.
      description: >-
        Returns a list of all device resources associated with the specified
        username. Request required username in the path and response body will
        have array of  devices. Each array object will have an individual device
        information consisting of deviceType , deviceName, CreateDate.
      x-group-name: 'CIAM-MFA'
      x-proxy-name: 'Get Devices'
      x-default-example: Devices
      tags:
        - device endpoint definition
      parameters:
        - name: username
          description: Username
          schema:
            type: string
          in: path
          required: true
        - name: type
          description: TOTP/FIDO
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MFADevice'
              examples:
                Devices:
                  $ref: '#/components/examples/DeviceList'
                  summary: List of Devices
                Filtered Devices:
                  $ref: '#/components/examples/TypeFilteredDeviceList'
          description: Successful response
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      operationId: createMFADevice
      summary: Add  User device.
      description: >-
        Operation to register user MFA device.
      x-group-name: 'CIAM-MFA'
      x-proxy-name: 'Add MFA Device'
      x-default-example: TOTP 
      requestBody:
        description: Request object of a device.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFADevice'
            examples:
              TOTP:
                $ref: '#/components/examples/TOTPDeviceAddRequest'
                summary: Request to add TOTP Devices. Request body requires deviceType and deviceName as additional attribute.
              YubiKey:
                $ref: '#/components/examples/YubiKeyDeviceAddRequest'
                summary: Request to add TOTP Devices. Request body requires deviceType,  deviceName as additional attribute along with Relying party domain information
              FIDO2:
                $ref: '#/components/examples/FIDO2DeviceAddRequest'
        required: true
      tags:
        - device creation endpoint definition
      parameters:
        - name: username
          description: User Name associated associated with the device.
          schema:
            type: string
          in: path
          required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFADevice'
              examples:
                TOTP:
                  $ref: '#/components/examples/TOTPDeviceAddResponse'
                  summary: Response returns a  authentication ID that
                        is required for the next steps in the flow to validate and activate the
                        device for authentication.  Response also returns registration URI that
                        will be a  string that specifies the authenticator key URI (for example,
                        otpauth://totp/abc@example.com?secret={secretValue}.
                YubiKey:
                  $ref: '#/components/examples/YubiKeyDeviceAddResponse'
                  summary: Response returns a  authentication ID that
                        is required for the next steps in the flow to validate and activate the
                        device for authentication.  Response also returns registration URI that
                        will be a  string that specifies the authenticator key URI (for example,
                        otpauth://totp/abc@example.com?secret={secretValue}.
                FIDO2:
                  $ref: '#/components/examples/FIDO2DeviceAddResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /users/{username}/mfadevices/{authId}:
    post:
      requestBody:
        description: operation to activate the TOTP device specified in the request URL. 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
            examples:
              TOTP:
                $ref: '#/components/examples/TOTPDeviceRegistrationRequest'
                summary: TOTP  Device activation request
              FIDO2:
                $ref: '#/components/examples/ActivateFIDO2Request'
                summary: API to activate the device specified in the request URL. 
        required: true
      tags:
        - device registration endpoint
      parameters:
        - name: username
          description: >-
            Username of the user activating the device. This should be similar
            to username used during registration
          schema:
            type: string
          in: path
          required: true
        - name: authId
          description: >-
            Username of the user activating the device. This should be similar
            to username used during registration
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
              examples:
                TOTP:
                  $ref: '#/components/examples/TOTPDeviceRegistrationResponse'
                  summary: TOTP Device registration request
                FIDO2:
                  $ref: '#/components/examples/ActivateFIDO2Response'
                  summary: Displays activate status
          description: Successful Response
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: activateDevice
      summary: Activate device
      description: >-
        Device is activated and registered using TOTP displayed on the
        authenticator application.
      x-proxy-name: Activate Device
      x-group-name: CIAM-MFA 
      x-default-example: TOTP
  /ciam-mfa/v2/users/{user_name}/mfadevices/{device_type}/{device_name}:
    get:
      tags:
        - unpair TOTP device endpoint
      parameters:
        - name: user_name
          description: >-
            Username of the user unpairing the device. This should be similar
            to username used during registration
          schema:
            type: string
          in: path
          required: true
        - name: device_type
          description: >-
            The type of the device to be unpaired.
          schema:
            type: string
          in: path
          required: true
        - name: device_name
          description: The name of the device that need to be unpaired
          schema:
            type: string
          in: path
          required: true
      responses:
        '204': 
          description: No Response
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: unpairDevice
      summary: Unpair TOTP device
      description: >-
        Unpair the device
      x-proxy-name: Unpair TOTP Device
      x-group-name: CIAM-MFA
  /ciam-mfa/v2/users/{user_name}/mfadevices/{device_type}/all:
    get:
      tags:
        - unpair FIDO2 device endpoint
      parameters:
        - name: user_name
          description: >-
            Username of the user unpairing the device. This should be similar
            to username used during registration
          schema:
            type: string
          in: path
          required: true
        - name: device_type
          description: >-
            The type of the device to be unpaired.
          schema:
            type: string
          in: path
          required: true
      responses:
        '204': 
          description: No Response
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: unpairDevice
      summary: Unpair FIDO2 device
      description: >-
        Unpair the device
      x-proxy-name: Unpair FIDO2 Device
      x-group-name: CIAM-MFA
  /deviceAuthentications:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
            examples:
              EmailAuthentication:
                $ref: '#/components/examples/EmailAuthenticationRequest'
                summary: Email authentication request
              SMSAuthentication:
                $ref: '#/components/examples/SmsAuthenticationRequest'
                summary: SMS authentication request
              TOTPAuthentication:
                $ref: '#/components/examples/TotpAuthenticationRequest'
                summary: TOTP authentication request
              FIDO2Authentication:
                $ref: '#/components/examples/FIDO2AuthenticationRequest'
        required: true
      tags:
        -  initialize device authentication
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
              examples:
                EmailAuthentication:
                  $ref: '#/components/examples/EmailAuthenticationResponse'
                  summary: Email authentication response
                SMSAuthentication:
                  $ref: '#/components/examples/SmsAuthenticationResponse'
                  summary: SMS authentication response
                TOTPAuthentication:
                  $ref: '#/components/examples/TotpAuthenticationResponse'
                  summary: TOTP authentication response
                FIDO2Authentication:
                  $ref: '#/components/examples/FIDO2AuthenticationResponse'
                  summary: FIDO2 authentication response
          description: Successfully created.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: initializeDeviceAuthentication
      summary: Initialize Device Authentication
      description: >-
        The POST deviceAuthentications operation initiates an MFA device
        authentication flow.  Operation supports authentication using SMS, EMAIL
        and registered TOTP device such as Google authenticator.  The request
        body requires a username, deviceType  attribute to associate a user with
        the MFA flow. SMS or EMAIL based OTP based authentication  requires
        either email or Phone Number depending on deviceType selected. TOTP flow
        required deviceName provided during device registration  flow . For 
        device registration  refer device registration API. The response returns
        a  authentication ID that is required for the next steps in the flow.
        The response also includes a status and message.
      x-group-name: CIAM-MFA
      x-proxy-name: Initialize Authentication
      x-default-example: EmailAuthentication
  /deviceAuthentications/{authId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              sms/email/TOTP:
                $ref: '#/components/schemas/ValidationRequest'
              FIDO2:
                $ref: '#/components/schemas/AuthenticateFIDO2DevicePayload'
            examples:
              EmailAuthentication:
                $ref: '#/components/examples/ValidationRequest'
                summary: Email otp validation request
              SMSAuthentication:
                $ref: '#/components/examples/ValidationRequest'
                summary: SMS otp validation request
              TOTPAuthentication:
                $ref: '#/components/examples/ValidationRequest'
                summary: TOTP  validation request
              FIDO2:
                $ref: '#/components/examples/AuthenticateFIDO2DevicePayload'
                summary: FIDO2 validation request
        required: true
      tags:
        - device authentication
      parameters:
        - name: authId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                email/sms/TOTP:
                  $ref: '#/components/schemas/ValidationResponse'
                FIDO2:
                  $ref: '#/components/schemas/AuthenticateDeviceFIDO2Response'
              examples:
                EmailAuthentication:
                  $ref: '#/components/examples/ValidationResponse'
                  summary: Email otp validation response
                SMSAuthentication:
                  $ref: '#/components/examples/ValidationResponse'
                  summary: SMS otp validation response
                TOTPAuthentication:
                  $ref: '#/components/examples/ValidationResponse'
                  summary: TOTP otp validation response
                FIDO2:
                  $ref: '#/components/examples/AuthenticateDeviceFIDO2Response'
                  summary: FIDO2 authentication response 
          description: Successful operation.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      operationId: validateOTP
      summary: Validate Device authentication request
      description: >-
        The multi-factor authentication flow uses a one-time passcode (OTP) sent
        to the user's device to continue the flow. The user receives the OTP on
        a specified device and submits it as a step in the authentication
        process. Prerequisite is to call Initialize device authentication to get
        a {{authID}} for the endpoint.
      x-group-name: CIAM-MFA
      x-proxy-name: Validate Authentication
  /riskEvaluations:
    post:
      tags:
        - V2
      summary: riskEvaluations
      description: >- 
        Use risk evaluations to calculate the risk level and other risk-related details 
        associated with a received event based on the environment's settings and data provided in the event
      x-group-name: 'Risk API'
      x-proxy-name: 'Risk Evaluations'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'  
  /riskEvaluations/{riskEvaluationID}:
    put:
      tags:
        - V2
      summary: updateRiskEvaluation
      description: >- 
        Use this to update the risk evaluation configuration, and to modify the completion 
        status of the resource when the risk evaluation is still in progress.
      x-group-name: 'Risk API'
      x-proxy-name: 'Update Risk Evaluations'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskRequest'
      parameters:
        - name: riskEvaluationID
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RiskResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /users/{username}/isFidoRegistered/{rpId}:
    get:
      summary: FIDO2 Device registration info
      description: >-
        Checks if user is registered for FIDO for the given device; and if user has activated any device for FIDO.
      x-group-name: CIAM-MFA
      x-proxy-name: isFIDORegistered
      x-default-example: Devices
      tags:
        - device endpoint definition
      parameters:
        - name: username
          description: Username
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/isFIDO2RegisteredResponse'
              examples:
                User Not Registered:
                  $ref: '#/components/examples/isFIDO2RegisteredResponse1'
                No Active FIDO2 Device:
                  $ref: '#/components/examples/isFIDO2RegisteredResponse2'
                Active FIDO2 Device:
                  $ref: '#/components/examples/isFIDO2RegisteredResponse3'
          description: Successful response
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /ciam-mfa/v2/get/token:
    post:
      summary: generate access token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenGenerationRequest'
            example:
              $ref: '#/components/examples/TokenGenerationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenGenerationResponse'
              example:
                $ref: '#/components/examples/TokenGenerationResponse'
          description: Successful Repsonse
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
   
components:
  schemas:
    TokenGenerationRequest:
      properties:
        grant_type: 
          type: string
        client_id:
          type: string
        client_secret:
          type: string
    TokenGenerationResponse:
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
    ErrorResponse:
      properties:
        error:
          format: int32
          type: integer
        message:
          type: string
        traceid:
          type: string
        timestamp:
          type: string
    RegistrationRequest:
      properties:
        deviceType:
          $ref: '#/components/schemas/Type'
        origin:
          type: string
        attestation:
          type: string
        otp:
          format: password
          type: string
    RegistrationResponse:
      properties:
        status:
          type: string
        message:
          type: string
    Type:
      enum:
        - EMAIL
        - SMS
        - TOTP
        - SECURITY_KEY
        - PLATFORM
      type: string
    FIDORPDomain:
      properties:
        id:
          type: string
        name:
          type: string
    AuthenticationRequest:
      properties:
        userName:
          type: string
        deviceType:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        deviceName:
          type: string
          example: iphone/android
        templateName:
          type: string
          example: emailTemplate
        rpId:
          type: string
    AuthenticationResponse:
      properties:
        authId:
          type: string
        status:
          type: string
        message:
          type: string
    ValidationRequest:
      properties:
        otp:
          format: password
          type: string
        deviceType:
          type: string
    ValidationResponse:
      properties:
        status:
          type: string
        message:
          type: string
    RiskRequest:
      properties:
        appId:
          type: string
        userId:
          type: string
        ipConfig:
          type: string
        sessionId:
          type: string
        browserCookie:
          type: string
        browserUserAgent:
          type: string
        signalData:
          type: string
        policyId:
          type: string
    RiskResponse:
      properties:
        riskLevel:
          type: string
        riskScore:
          type: string
        recommendedAction:
          type: string
        evaluationId:
          type: string
    MFADevice:
      properties:
        authId:
          type: string
        deviceType:
          $ref: '#/components/schemas/Type'
        status:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        deviceName:
          type: string
          example: iphone/android
        createdAt:
          type: string
        updatedAt:
          type: string
        secret:
          type: string
        registrationUri:
          type: string
        rpDomain:
          $ref: '#/components/schemas/FIDORPDomain'
        rp.id:
          type: string
        rp.name:
          type: string
    InitiateAuthResponse:
      properties:
        authId:
          type: string
        status:
          type: string
        message:
          type: string
        publicKeyCredentialRequestOptions:
          type: string
    ActivateFIDO2Response:
      properties:
        id:
          type: string
        type:
          type: string
        rawId:
          type: string
        response:
          type: object
    AuthenticateFIDO2DevicePayload:
      properties:
        origin:
          type: string
        assertion:
          type: string
    AuthenticateDeviceFIDO2Response:
      properties:
        deviceType:
          type: string
        origin:
          type: string
        assertion:
          type: string
    CreateDeviceFIDO2Response:
      properties:
        authId:
          type: string
        deviceType:
          type: string
        status:
          type: string
        rp.id:
          type: string
        rp.name:
          type: string
        publicKeyCredentialCreationOptions:
          type: string
    isFIDO2RegisteredResponse:
      properties:
        status:
          type: string
        message:
          type: string
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: '10008'
            message: Invalid Authid
            traceId: 7027b61dbf7645399d204dbfa0de0870
            timestamp: 2022-06-24-15.30.20
      description: The request cannot be validated.
      x-model-version: 1
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: '10001'
            message: Access token has expired
            traceId: 7027b61dbf7645399d204dbfa0de0870
            timestamp: 2022-06-24-15.30.20
      description: The request was unauthorized.
      x-model-version: 1
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: '10003'
            message: User not found, please check the username
            traceId: 7027b61dbf7645399d204dbfa0de0870
            timestamp: 2022-06-24-15.30.20
      description: The requested resource does not exist.
      x-model-version: 1
    ServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            code: '10010'
            message: An unexpected internal server error occurred. Try again later
            traceId: 7027b61dbf7645399d204dbfa0de0870
            timestamp: 2022-06-24-15.30.20
      description: An unexpected internal server error occurred.
      x-model-version: 1
  examples:
    TokenGenerationRequest:
      value:
        grant_type: "client_credentials"
        client_id: "harsh"
        client_secret: "harsh123"
    TokenGenerationResponse:
      value:
        access_token: "eyJhbGciOiJSUzI1NiIsImtpZCI6IkZKS1VxQUxyQU9kVTQ0eWlNRS1WUlFLSDJrbyIsInBpLmF0bSI6Im51ZDMifQ.eyJzY29wZSI6IiIsImF1dGhvcml6YXRpb25fZGV0YWlscyI6W10sImNsaWVudF9pZCI6IlM4anl3a3lvMCIsImlzcyI6Imh0dHBzOi8vZmRjLWZlZHNzby1kZXYuMWRjLmNvbSIsImV4cCI6MTcwMjg5ODgxNH0.eK0QQQe2HUJ-7Hs3Apk_DbXwOFHE-weZRttVAvQ8zVRmxKHfMG5Oqw6ey_VBw4CKt0RSPfMvtNFSaz56Krgg2uLvYo88qlbmkFEozJVr1SFpO5D785lGxPV8bDB-v3pd3W-Z6DFqe4KrQzaxjUvGzlArst3s3wfCkm6W0XEsjgHdYQHYvE5mf_CTH8-Vr98ypv62hk7oHNRUbRlJ9wH9DiRqxNCp2zMhlE__m1yac09FANz7jXolQwgfZj0w0PiNJhu7-n-cK0nUzQ496iskTiu6NaJvwh4XoTBUbLf8DRxVru7qrr50dgCGDMQ8tGGZnu__3WMFFckeogJ68RmAIA"
        token_type: "Bearer"
        expires_in: 7199 
    DeviceList:
      value:
        - deviceType: TOTP
          deviceName: Google
          status: Active
          createdAt: 06/16/2022
        - deviceType: FIDO
          deviceName: MSFT
          status: Active
          createdAt: 07/16/2022
    TypeFilteredDeviceList:
      value:
        - deviceType: TOTP
          deviceName: Google
          status: Active
          createdAt: 06/16/2022
    ValidationRequest:
      value:
        otp: '3423423'
    ValidationResponse:
      value:
        - status: Success
          message: 'OTP has been validated successfully '
    EmailAuthenticationRequest:
      value:
        - userName: jdoe
          deviceType: EMAIL
          email: a@b.com
          deviceName: MyEmail
          templateName: emailTemplate
    SmsAuthenticationRequest:
      value:
        - userName: jdoe
          deviceType: SMS
          email: 999-000-9999
          deviceName: MySMS
          templateName: SMSTemplate
    TotpAuthenticationRequest:
      value:
        - userName: jdoe
          deviceType: TOTP
          deviceName: Google
    TotpAuthenticationResponse:
      value:
        - authId: '654564645'
          status: Success
          message: OTP has been sent to the device
    EmailAuthenticationResponse:
      value:
        - authId: '798798789'
          status: Success
          message: OTP has been sent to the device
    SmsAuthenticationResponse:
      value:
        - authId: '798798789'
          status: Success
          message: OTP has been sent to the device
    TOTPDeviceAddRequest:
      value:
        deviceType: TOTP
        deviceName: Google
    TOTPDeviceAddResponse:
      value:
        deviceType: TOTP
        deviceName: Google
        status: ACTIVATION_REQUIRED
        authId: 30706e95-5e38-4148-b0e3-1e801cd87660"
        registrationUri: >-
          otpauth://totp/tomjones@example.com?secret=BYTUOYTTUPPTDNKEODND36NV7NA7S4D3
        secret: BYTUOYTTUPPTDNKEODND36NV7NA7S4D3
    YubiKeyDeviceAddRequest:
       value:
        deviceType: SECURITY_KEY
        deviceName: yubikey
        rpDomain: 
            id: pingone.com
            name: PingOne    
    YubiKeyDeviceAddResponse:
       value:
        deviceType: SECURITY_KEY
        deviceName: yubikey
        status: ACTIVATION_REQUIRED
        authId: 30706e95-5e38-4148-b0e3-1e801cd87660"
        registrationUri: >-
          otpauth://totp/tomjones@example.com?secret=BYTUOYTTUPPTDNKEODND36NV7NA7S4D3
        secret: BYTUOYTTUPPTDNKEODND36NV7NA7S4D3
    TOTPDeviceRegistrationRequest:
      value:
         otp: '312312'
    TOTPDeviceRegistrationResponse:
      value:
        - status: Success
          message: 'OTP has been validated successfully '
    RiskRequest:
      value:
        appId: dummy_app
        ipConfig: '{{$randomIP}}'
        userId: '{{user_id}}'
        sessionId: ''
        browserCookie: ''
        browserUserAgent: >-
          Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
          (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36
          Edg/114.0.1823.67
        signalData: >-
          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.eDE=
        policyId: '{{policyId}}'
    RiskResponse:
      value:            
        riskLevel: HIGH
        riskScore: '75.0'
        evaluationId: 19fb4d99-3332-4c21-88c9-dc3cdb3df5e6
    FIDO2AuthenticationRequest:
      value:
        userName: username
        rpID: app.fiserv.com
        deviceType: FIDO2
    FIDO2AuthenticationResponse:
      value:
        authId: 038273f3-7d84-4c80-9477-99f88646797d
        status: SUCCESS
        message: Please generate the assertion with 'publicKeyCredentialRequestOptions' using Web Authentication API and authenticate FIDO device with assertion
        publicKeyCredentialRequestOptions: "{\"challenge\":[13,93,-97,-86,-108,28,22,-98,-9,-53,37,23,-105,-122,-64,-75,57,-88,-13,57,-112,96,-33,42,-119,-72,116,-94,95,-50,-42,99],\"timeout\":120000,\"rpId\":\"iam-demo.1dc.com\",\"allowCredentials\":[{\"type\":\"public-key\",\"id\":[-114,11,-40,2,-85,-109,-107,-126,-25,-5,-80,113,-9,-25,-24,-98,123,27,-25,-34,6,-66,65,-8,60,-88,-56,16,-78,88,-57,-29,0,-93,23,-50,61,-11,-31,-128,-62,-14,-43,-59,-52,33,-110,-127,-60,31,-26,36,-45,77,64,94,-83,56,3,87,-122,-31,94,-107]}],\"userVerification\":\"preferred\"}"
    ActivateFIDO2Request:
      value:
        deviceType: FIDO2
        origin: app.fiserv.com
        attestation: 
          "id: HozFCJ2txaDCTYPEmWmhwAKzwvccLhNPcKr6LM77XVtLgZ0unaJb-PRa8daCVnYfasodB3KPPXrxrgTmehY07A
          type: public-key
          rawId: HozFCJ2txaDCTYPEmWmhwAKzwvccLhNPcKr6LM77XVtLgZ0unaJb+PRa8daCVnYfasodB3KPPXrxrgTmehY07A==
          response:
            clientDataJSON: eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiUW4tV2V6SmRnRnoxYXp2Q3FDRW81Q0Y0Z3pEbGdsSEtZdnBBT1VmNHVITSIsIm9yaWdpbiI6Imh0dHBzOi8vaWFtLWRlbW8uMWRjLmNvbSIsImNyb3NzT3JpZ2luIjpmYWxzZX0=
            attestationObject: o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YVjEWvc+/XkaVwxa012pCZWAzWXwWSy8IupI6+2BznkpxM5FAAAAAgAAAAAAAAAAAAAAAAAAAAAAQB6MxQidrcWgwk2DxJlpocACs8L3HC4TT3Cq+izO+11bS4GdLp2iW/j0WvHWglZ2H2rKHQdyjz168a4E5noWNOylAQIDJiABIVggy/inGDF9alhbIY072g8+ImX1kpYIocLm0yo1Pcri4b4iWCD9l1YQdWQJbOGSBMwy6huh0+6iPaUvCXfmN5a/Wo9FUA=="
    ActivateFIDO2Response:
      value:
        status: ACTIVE
    AuthenticateFIDO2DevicePayload:
      value:
        deviceType: FIDO2
        origin: app.fiserv.com
        assertion: >-
          "id: jgvYAquTlYLn-7Bx9-fonnsb594GvkH4PKjIELJYx-MAoxfOPfXhgMLy1cXMIZKBxB_mJNNNQF6tOANXhuFelQ
          rawId: jgvYAquTlYLn+7Bx9+fonnsb594GvkH4PKjIELJYx+MAoxfOPfXhgMLy1cXMIZKBxB/mJNNNQF6tOANXhuFelQ==
          type: public-key
          response:
            clientDataJSON: eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiOHVVQTA2dVB1VFRGNmI2dkhXcTdkZWt6QVo3Y2V2MDMtNnJSQzZoTEFhVSIsIm9yaWdpbiI6Imh0dHBzOi8vaWFtLWRlbW8uMWRjLmNvbSIsImNyb3NzT3JpZ2luIjpmYWxzZSwib3RoZXJfa2V5c19jYW5fYmVfYWRkZWRfaGVyZSI6ImRvIG5vdCBjb21wYXJlIGNsaWVudERhdGFKU09OIGFnYWluc3QgYSB0ZW1wbGF0ZS4gU2VlIGh0dHBzOi8vZ29vLmdsL3lhYlBleCJ9
            authenticatorData: Wvc+/XkaVwxa012pCZWAzWXwWSy8IupI6+2BznkpxM4FAAAACw==
            signature: MEYCIQDp7wBeYYv+02m56wbQaLUstoZWIDxpKI2IvmgeOMUHYQIhAP2W5tDVqKHAQbTsAAZzTdXD/px9ZOtYtIysZyKs4Ws7
            userHandle: ''" 
    AuthenticateDeviceFIDO2Response:
      value:
        id: jgvYAquTlYLn-7Bx9-fonnsb594GvkH4PKjIELJYx-MAoxfOPfXhgMLy1cXMIZKBxB_mJNNNQF6tOANXhuFelQ
        rawId: jgvYAquTlYLn+7Bx9+fonnsb594GvkH4PKjIELJYx+MAoxfOPfXhgMLy1cXMIZKBxB/mJNNNQF6tOANXhuFelQ==
        type: public-key
        response:
          clientDataJSON: eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiOHVVQTA2dVB1VFRGNmI2dkhXcTdkZWt6QVo3Y2V2MDMtNnJSQzZoTEFhVSIsIm9yaWdpbiI6Imh0dHBzOi8vaWFtLWRlbW8uMWRjLmNvbSIsImNyb3NzT3JpZ2luIjpmYWxzZSwib3RoZXJfa2V5c19jYW5fYmVfYWRkZWRfaGVyZSI6ImRvIG5vdCBjb21wYXJlIGNsaWVudERhdGFKU09OIGFnYWluc3QgYSB0ZW1wbGF0ZS4gU2VlIGh0dHBzOi8vZ29vLmdsL3lhYlBleCJ9
          authenticatorData: Wvc+/XkaVwxa012pCZWAzWXwWSy8IupI6+2BznkpxM4FAAAACw==
          signature: MEYCIQDp7wBeYYv+02m56wbQaLUstoZWIDxpKI2IvmgeOMUHYQIhAP2W5tDVqKHAQbTsAAZzTdXD/px9ZOtYtIysZyKs4Ws7
          userHandle: ''
    FIDO2DeviceAddRequest:
      value:
        deviceType: FIDO2
        rp:
          id: app.fiserv.com
          name: fiserv
        email: username@fiserv.com
    FIDO2DeviceAddResponse:
      value:
        authId: 67e07830-3636-4479-a407-da0a16b85c3c
        deviceType: FIDO2
        status: ACTIVATION_REQUIRED
        rp:
          id: app.fiserv.com
          name: fiserv
        publicKeyCredentialCreationOptions: 
          "rp:
            id:app.fiserv.com
            name:fiserv
          user:
            id:
              - -121
              - 2
              - 76
              - 83
              - 98
              - -86
              - -48
              - 1
              - -114
              - 31
              - -30
              - -9
              - 116
              - 52
              - -37
              - -78
              - 68
              - -51
              - 63
              - 37
              - 14
              - 68
              - -112
              - 56
              - -104
              - -7
              - -41
              - -116
              - -121
              - -46
              - -38
              - 22
            displayName: APM_NA_TEST_RUN_2102231126$demouser
            name: APM_NA_TEST_RUN_2102231126$demouser
          challenge:
            - -19
            - 41
            - 45
            - -102
            - -21
            - 109
            - -109
            - -125
            - 32
            - 121
            - -4
            - -78
            - -123
            - 80
            - 53
            - 58
            - 81
            - 29
            - -111
            - 81
            - 75
            - 11
            - -44
            - 73
            - -81
            - 90
            - 4
            - 42
            - -27
            - 108
            - 75
            - 20
          pubKeyCredParams:
            - type: public-key
              alg: -7
            - type: public-key
              alg: -37
            - type: public-key
              alg: -257
          timeout: 120000
          excludeCredentials: []
          authenticatorSelection:
            residentKey: required
            requireResidentKey: true
            userVerification: required
          attestation: none"
    isFIDO2RegisteredResponse1:
      value:
        status: FAILURE
        message: User not found, please check the username
    isFIDO2RegisteredResponse2:
      value:
        status: FAILURE
        message: No registered FIDO2 Device Found
    isFIDO2RegisteredResponse3:
      value:
        status: FAILURE
        message: Registered FIDO2 Device Found
  securitySchemes:
    Bearer:
      type: oauth2
      description: ''
      flows:
        clientCredentials:
          tokenUrl: https://ciam-mfa-api-dev.1dc.com/ciam-mfa/v1/get/token
          scopes: {}
  headers: {}
  parameters: {}
tags: []
security:
  - Bearer: []

